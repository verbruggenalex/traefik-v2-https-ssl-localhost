version: '3.7'

services:
  traefik:
    image: traefik:2.3
    restart: unless-stopped
    healthcheck:
      test: traefik healthcheck
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 5s
    environment:
      TRAEFIK_DOMAIN:
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config.yml:/etc/traefik/config.yml:ro
      - ./certs:/etc/certs:ro
    networks:
      - proxy
    labels:
      traefik.enable: true
      traefik.http.routers.traefik: true

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000
      - 8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.${TRAEFIK_DOMAIN}`)
      traefik.http.routers.portainer.tls: true
      traefik.http.routers.portainer.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000
    networks:
      - proxy

  web:
    image: verbral/php-theia:7.4
    healthcheck:
      test: wget -nv -t1 --spider 'http://localhost:3000' || exit 1
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 5s
    working_dir: /home/project
    environment:
      WAKATIME_API_KEY:
      GIT_USER_NAME:
      GIT_USER_EMAIL:
    ports:
      - 80
      - 3000
    volumes:
      - ${PWD}:/home/project
      - ~/.ssh:/home/docker/.ssh
    labels:
      traefik.enable: true
      traefik.http.routers.traefik-ide.rule: Host(`traefik.${TRAEFIK_DOMAIN}`) && PathPrefix(`/ide`)
      traefik.http.routers.traefik-ide.service: traefik-ide
      traefik.http.routers.traefik-ide.middlewares: ide-stripprefix
      traefik.http.middlewares.ide-stripprefix.stripprefix.prefixes: /ide
      traefik.http.routers.traefik-ide.tls: true
      traefik.http.services.traefik-ide.loadbalancer.server.port: 3000
    networks:
      - proxy

networks:
  proxy:
    external: true
    name: ${TRAEFIK_NETWORK}

volumes:
  portainer_data:
